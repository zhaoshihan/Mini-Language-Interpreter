Terminals unused in grammar

   INT_TYPE
   FLOAT_TYPE
   DOUBLE_TYPE
   BOOL_TYPE
   STRING_TYPE
   DQ_MARK
   EXC_MARK
   INCREASE
   DECREASE
   STR_VAL
   COMMENT
   FUNCTION
   IF
   ELSE
   ELSIF
   WHILE
   FOR
   RETURN_T
   BREAK
   CONTINUE
   NULL_T
   LC
   RC
   SEMICOLON
   COMMA
   LOGICAL_AND
   LOGICAL_OR
   EQ
   NE
   GT
   GE
   LT
   LE
   MOD
   TRUE_T
   FALSE_T
   GLOBAL_T


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program line

    3 line: '\n'
    4     | math_statement '\n'
    5     | assign_statement '\n'
    6     | PRINT_T IDENTIFIER '\n'
    7     | "hello msg" '\n'
    8     | error '\n'

    9 assign_statement: IDENTIFIER ASSIGN math_statement

   10 math_statement: NUM
   11               | IDENTIFIER
   12               | math_statement ADD math_statement
   13               | math_statement SUB math_statement
   14               | math_statement MUL math_statement
   15               | math_statement DIV math_statement
   16               | LP math_statement RP
   17               | SUB math_statement


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4 5 6 7 8
error (256) 8
NUM (258) 10
IDENTIFIER (259) 6 9 11
"hello msg" (260) 7
INT_TYPE (261)
FLOAT_TYPE (262)
DOUBLE_TYPE (263)
BOOL_TYPE (264)
STRING_TYPE (265)
DQ_MARK (266)
EXC_MARK (267)
INCREASE (268)
DECREASE (269)
STR_VAL (270)
PRINT_T (271) 6
COMMENT (272)
FUNCTION (273)
IF (274)
ELSE (275)
ELSIF (276)
WHILE (277)
FOR (278)
RETURN_T (279)
BREAK (280)
CONTINUE (281)
NULL_T (282)
LC (283)
RC (284)
SEMICOLON (285)
COMMA (286)
ASSIGN (287) 9
LOGICAL_AND (288)
LOGICAL_OR (289)
EQ (290)
NE (291)
GT (292)
GE (293)
LT (294)
LE (295)
MOD (296)
TRUE_T (297)
FALSE_T (298)
GLOBAL_T (299)
SUB (300) 13 17
ADD (301) 12
MUL (302) 14
DIV (303) 15
LP (304) 16
RP (305) 16


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 2
line (54)
    on left: 3 4 5 6 7 8, on right: 2
assign_statement (55)
    on left: 9, on right: 5
math_statement (56)
    on left: 10 11 12 13 14 15 16 17, on right: 4 9 12 13 14 15 16
    17


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . line

    $end         shift, and go to state 2
    error        shift, and go to state 3
    NUM          shift, and go to state 4
    IDENTIFIER   shift, and go to state 5
    "hello msg"  shift, and go to state 6
    PRINT_T      shift, and go to state 7
    SUB          shift, and go to state 8
    LP           shift, and go to state 9
    '\n'         shift, and go to state 10

    line              go to state 11
    assign_statement  go to state 12
    math_statement    go to state 13


State 2

    0 $accept: program $end .

    $default  accept


State 3

    8 line: error . '\n'

    '\n'  shift, and go to state 14


State 4

   10 math_statement: NUM .

    $default  reduce using rule 10 (math_statement)


State 5

    9 assign_statement: IDENTIFIER . ASSIGN math_statement
   11 math_statement: IDENTIFIER .

    ASSIGN  shift, and go to state 15

    $default  reduce using rule 11 (math_statement)


State 6

    7 line: "hello msg" . '\n'

    '\n'  shift, and go to state 16


State 7

    6 line: PRINT_T . IDENTIFIER '\n'

    IDENTIFIER  shift, and go to state 17


State 8

   17 math_statement: SUB . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    math_statement  go to state 19


State 9

   16 math_statement: LP . math_statement RP

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    math_statement  go to state 20


State 10

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 11

    2 program: program line .

    $default  reduce using rule 2 (program)


State 12

    5 line: assign_statement . '\n'

    '\n'  shift, and go to state 21


State 13

    4 line: math_statement . '\n'
   12 math_statement: math_statement . ADD math_statement
   13               | math_statement . SUB math_statement
   14               | math_statement . MUL math_statement
   15               | math_statement . DIV math_statement

    SUB   shift, and go to state 22
    ADD   shift, and go to state 23
    MUL   shift, and go to state 24
    DIV   shift, and go to state 25
    '\n'  shift, and go to state 26


State 14

    8 line: error '\n' .

    $default  reduce using rule 8 (line)


State 15

    9 assign_statement: IDENTIFIER ASSIGN . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    math_statement  go to state 27


State 16

    7 line: "hello msg" '\n' .

    $default  reduce using rule 7 (line)


State 17

    6 line: PRINT_T IDENTIFIER . '\n'

    '\n'  shift, and go to state 28


State 18

   11 math_statement: IDENTIFIER .

    $default  reduce using rule 11 (math_statement)


State 19

   12 math_statement: math_statement . ADD math_statement
   13               | math_statement . SUB math_statement
   14               | math_statement . MUL math_statement
   15               | math_statement . DIV math_statement
   17               | SUB math_statement .

    $default  reduce using rule 17 (math_statement)


State 20

   12 math_statement: math_statement . ADD math_statement
   13               | math_statement . SUB math_statement
   14               | math_statement . MUL math_statement
   15               | math_statement . DIV math_statement
   16               | LP math_statement . RP

    SUB  shift, and go to state 22
    ADD  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    RP   shift, and go to state 29


State 21

    5 line: assign_statement '\n' .

    $default  reduce using rule 5 (line)


State 22

   13 math_statement: math_statement SUB . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    math_statement  go to state 30


State 23

   12 math_statement: math_statement ADD . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    math_statement  go to state 31


State 24

   14 math_statement: math_statement MUL . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    math_statement  go to state 32


State 25

   15 math_statement: math_statement DIV . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    math_statement  go to state 33


State 26

    4 line: math_statement '\n' .

    $default  reduce using rule 4 (line)


State 27

    9 assign_statement: IDENTIFIER ASSIGN math_statement .
   12 math_statement: math_statement . ADD math_statement
   13               | math_statement . SUB math_statement
   14               | math_statement . MUL math_statement
   15               | math_statement . DIV math_statement

    SUB  shift, and go to state 22
    ADD  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25

    $default  reduce using rule 9 (assign_statement)


State 28

    6 line: PRINT_T IDENTIFIER '\n' .

    $default  reduce using rule 6 (line)


State 29

   16 math_statement: LP math_statement RP .

    $default  reduce using rule 16 (math_statement)


State 30

   12 math_statement: math_statement . ADD math_statement
   13               | math_statement . SUB math_statement
   13               | math_statement SUB math_statement .
   14               | math_statement . MUL math_statement
   15               | math_statement . DIV math_statement

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25

    $default  reduce using rule 13 (math_statement)


State 31

   12 math_statement: math_statement . ADD math_statement
   12               | math_statement ADD math_statement .
   13               | math_statement . SUB math_statement
   14               | math_statement . MUL math_statement
   15               | math_statement . DIV math_statement

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25

    $default  reduce using rule 12 (math_statement)


State 32

   12 math_statement: math_statement . ADD math_statement
   13               | math_statement . SUB math_statement
   14               | math_statement . MUL math_statement
   14               | math_statement MUL math_statement .
   15               | math_statement . DIV math_statement

    $default  reduce using rule 14 (math_statement)


State 33

   12 math_statement: math_statement . ADD math_statement
   13               | math_statement . SUB math_statement
   14               | math_statement . MUL math_statement
   15               | math_statement . DIV math_statement
   15               | math_statement DIV math_statement .

    $default  reduce using rule 15 (math_statement)
