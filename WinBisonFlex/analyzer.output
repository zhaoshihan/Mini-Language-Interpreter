Terminals unused in grammar

   INT_TYPE
   FLOAT_TYPE
   BOOL_TYPE
   STRING_TYPE
   DQ_MARK
   EXC_MARK
   INCREASE
   DECREASE
   STR_VAL
   COMMENT
   FUNCTION
   IF
   ELSE
   ELSIF
   WHILE
   FOR
   RETURN_T
   BREAK
   CONTINUE
   NULL_T
   LC
   RC
   SEMICOLON
   COMMA
   LOGICAL_AND
   LOGICAL_OR
   EQ
   NE
   GT
   GE
   LT
   LE
   MOD
   TRUE_T
   FALSE_T
   GLOBAL_T


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program line

    3 line: '\n'
    4     | expr '\n'
    5     | assignment '\n'
    6     | PRINT_T IDENTIFIER '\n'
    7     | "hello msg" '\n'
    8     | error '\n'

    9 assignment: IDENTIFIER ASSIGN expr

   10 expr: NUM
   11     | IDENTIFIER
   12     | expr ADD expr
   13     | expr SUB expr
   14     | expr MUL expr
   15     | expr DIV expr
   16     | LP expr RP
   17     | SUB expr


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4 5 6 7 8
error (256) 8
NUM (258) 10
IDENTIFIER (259) 6 9 11
"hello msg" (260) 7
INT_TYPE (261)
FLOAT_TYPE (262)
BOOL_TYPE (263)
STRING_TYPE (264)
DQ_MARK (265)
EXC_MARK (266)
INCREASE (267)
DECREASE (268)
STR_VAL (269)
PRINT_T (270) 6
COMMENT (271)
FUNCTION (272)
IF (273)
ELSE (274)
ELSIF (275)
WHILE (276)
FOR (277)
RETURN_T (278)
BREAK (279)
CONTINUE (280)
NULL_T (281)
LC (282)
RC (283)
SEMICOLON (284)
COMMA (285)
ASSIGN (286) 9
LOGICAL_AND (287)
LOGICAL_OR (288)
EQ (289)
NE (290)
GT (291)
GE (292)
LT (293)
LE (294)
MOD (295)
TRUE_T (296)
FALSE_T (297)
GLOBAL_T (298)
SUB (299) 13 17
ADD (300) 12
MUL (301) 14
DIV (302) 15
LP (303) 16
RP (304) 16


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
line (53)
    on left: 3 4 5 6 7 8, on right: 2
assignment (54)
    on left: 9, on right: 5
expr (55)
    on left: 10 11 12 13 14 15 16 17, on right: 4 9 12 13 14 15 16
    17


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . line

    $end         shift, and go to state 2
    error        shift, and go to state 3
    NUM          shift, and go to state 4
    IDENTIFIER   shift, and go to state 5
    "hello msg"  shift, and go to state 6
    PRINT_T      shift, and go to state 7
    SUB          shift, and go to state 8
    LP           shift, and go to state 9
    '\n'         shift, and go to state 10

    line        go to state 11
    assignment  go to state 12
    expr        go to state 13


State 2

    0 $accept: program $end .

    $default  accept


State 3

    8 line: error . '\n'

    '\n'  shift, and go to state 14


State 4

   10 expr: NUM .

    $default  reduce using rule 10 (expr)


State 5

    9 assignment: IDENTIFIER . ASSIGN expr
   11 expr: IDENTIFIER .

    ASSIGN  shift, and go to state 15

    $default  reduce using rule 11 (expr)


State 6

    7 line: "hello msg" . '\n'

    '\n'  shift, and go to state 16


State 7

    6 line: PRINT_T . IDENTIFIER '\n'

    IDENTIFIER  shift, and go to state 17


State 8

   17 expr: SUB . expr

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    expr  go to state 19


State 9

   16 expr: LP . expr RP

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    expr  go to state 20


State 10

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 11

    2 program: program line .

    $default  reduce using rule 2 (program)


State 12

    5 line: assignment . '\n'

    '\n'  shift, and go to state 21


State 13

    4 line: expr . '\n'
   12 expr: expr . ADD expr
   13     | expr . SUB expr
   14     | expr . MUL expr
   15     | expr . DIV expr

    SUB   shift, and go to state 22
    ADD   shift, and go to state 23
    MUL   shift, and go to state 24
    DIV   shift, and go to state 25
    '\n'  shift, and go to state 26


State 14

    8 line: error '\n' .

    $default  reduce using rule 8 (line)


State 15

    9 assignment: IDENTIFIER ASSIGN . expr

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    expr  go to state 27


State 16

    7 line: "hello msg" '\n' .

    $default  reduce using rule 7 (line)


State 17

    6 line: PRINT_T IDENTIFIER . '\n'

    '\n'  shift, and go to state 28


State 18

   11 expr: IDENTIFIER .

    $default  reduce using rule 11 (expr)


State 19

   12 expr: expr . ADD expr
   13     | expr . SUB expr
   14     | expr . MUL expr
   15     | expr . DIV expr
   17     | SUB expr .

    $default  reduce using rule 17 (expr)


State 20

   12 expr: expr . ADD expr
   13     | expr . SUB expr
   14     | expr . MUL expr
   15     | expr . DIV expr
   16     | LP expr . RP

    SUB  shift, and go to state 22
    ADD  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    RP   shift, and go to state 29


State 21

    5 line: assignment '\n' .

    $default  reduce using rule 5 (line)


State 22

   13 expr: expr SUB . expr

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    expr  go to state 30


State 23

   12 expr: expr ADD . expr

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    expr  go to state 31


State 24

   14 expr: expr MUL . expr

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    expr  go to state 32


State 25

   15 expr: expr DIV . expr

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 18
    SUB         shift, and go to state 8
    LP          shift, and go to state 9

    expr  go to state 33


State 26

    4 line: expr '\n' .

    $default  reduce using rule 4 (line)


State 27

    9 assignment: IDENTIFIER ASSIGN expr .
   12 expr: expr . ADD expr
   13     | expr . SUB expr
   14     | expr . MUL expr
   15     | expr . DIV expr

    SUB  shift, and go to state 22
    ADD  shift, and go to state 23
    MUL  shift, and go to state 24
    DIV  shift, and go to state 25

    $default  reduce using rule 9 (assignment)


State 28

    6 line: PRINT_T IDENTIFIER '\n' .

    $default  reduce using rule 6 (line)


State 29

   16 expr: LP expr RP .

    $default  reduce using rule 16 (expr)


State 30

   12 expr: expr . ADD expr
   13     | expr . SUB expr
   13     | expr SUB expr .
   14     | expr . MUL expr
   15     | expr . DIV expr

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25

    $default  reduce using rule 13 (expr)


State 31

   12 expr: expr . ADD expr
   12     | expr ADD expr .
   13     | expr . SUB expr
   14     | expr . MUL expr
   15     | expr . DIV expr

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25

    $default  reduce using rule 12 (expr)


State 32

   12 expr: expr . ADD expr
   13     | expr . SUB expr
   14     | expr . MUL expr
   14     | expr MUL expr .
   15     | expr . DIV expr

    $default  reduce using rule 14 (expr)


State 33

   12 expr: expr . ADD expr
   13     | expr . SUB expr
   14     | expr . MUL expr
   15     | expr . DIV expr
   15     | expr DIV expr .

    $default  reduce using rule 15 (expr)
