Terminals unused in grammar

   DQ_MARK
   EXC_MARK
   STR_VAL
   COMMENT
   BREAK
   CONTINUE
   NULL_T
   COMMA
   LOGICAL_AND
   LOGICAL_OR
   MOD
   GLOBAL_T


State 63 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program line
    3        | program function_definition

    4 line: '\n'
    5     | math_statement '\n'
    6     | assign_statement SEMICOLON '\n'
    7     | bool_statement '\n'
    8     | while_statement '\n'
    9     | if_statement '\n'
   10     | for_statement '\n'
   11     | return_statement SEMICOLON '\n'
   12     | PRINT_T LP IDENTIFIER RP SEMICOLON '\n'
   13     | "hello msg" '\n'
   14     | error '\n'

   15 lines: line
   16      | lines line

   17 assign_statement: IDENTIFIER ASSIGN math_statement
   18                 | IDENTIFIER ASSIGN function_employ
   19                 | IDENTIFIER ASSIGN bool_statement
   20                 | IDENTIFIER INCREASE
   21                 | IDENTIFIER DECREASE

   22 math_statement: NUM
   23               | IDENTIFIER
   24               | function_employ
   25               | math_statement ADD math_statement
   26               | math_statement SUB math_statement
   27               | math_statement MUL math_statement
   28               | math_statement DIV math_statement
   29               | LP math_statement RP
   30               | SUB math_statement

   31 bool_statement: TRUE_T
   32               | FALSE_T
   33               | math_statement GT math_statement
   34               | math_statement LT math_statement
   35               | math_statement EQ math_statement
   36               | math_statement GE math_statement
   37               | math_statement LE math_statement
   38               | math_statement NE math_statement

   39 TypeForParam: INT_TYPE
   40             | FLOAT_TYPE
   41             | DOUBLE_TYPE
   42             | BOOL_TYPE
   43             | STRING_TYPE

   44 function_definition: FUNCTION IDENTIFIER LP TypeForParam IDENTIFIER RP block
   45                    | FUNCTION IDENTIFIER LP RP block

   46 function_employ: IDENTIFIER LP math_statement RP
   47                | IDENTIFIER LP bool_statement RP

   48 return_statement: RETURN_T math_statement
   49                 | RETURN_T bool_statement

   50 if_statement: IF LP bool_statement RP block
   51             | IF LP bool_statement RP block ELSE block
   52             | IF LP bool_statement RP block elsif_list
   53             | IF LP bool_statement RP block elsif_list ELSE block

   54 elsif_list: elsif
   55           | elsif_list elsif

   56 elsif: ELSIF LP bool_statement RP block

   57 while_statement: WHILE LP bool_statement RP block

   58 for_statement: FOR LP assign_statement SEMICOLON bool_statement SEMICOLON assign_statement RP block

   59 block: LC lines RC
   60      | LC RC


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 4 5 6 7 8 9 10 11 12 13 14
error (256) 14
NUM (258) 22
IDENTIFIER (259) 12 17 18 19 20 21 23 44 45 46 47
"hello msg" (260) 13
INT_TYPE (261) 39
FLOAT_TYPE (262) 40
DOUBLE_TYPE (263) 41
BOOL_TYPE (264) 42
STRING_TYPE (265) 43
DQ_MARK (266)
EXC_MARK (267)
INCREASE (268) 20
DECREASE (269) 21
STR_VAL (270)
PRINT_T (271) 12
COMMENT (272)
FUNCTION (273) 44 45
IF (274) 50 51 52 53
ELSE (275) 51 53
ELSIF (276) 56
WHILE (277) 57
FOR (278) 58
RETURN_T (279) 48 49
BREAK (280)
CONTINUE (281)
NULL_T (282)
LC (283) 59 60
RC (284) 59 60
SEMICOLON (285) 6 11 12 58
COMMA (286)
ASSIGN (287) 17 18 19
LOGICAL_AND (288)
LOGICAL_OR (289)
EQ (290) 35
NE (291) 38
GT (292) 33
GE (293) 36
LT (294) 34
LE (295) 37
MOD (296)
TRUE_T (297) 31
FALSE_T (298) 32
GLOBAL_T (299)
SUB (300) 26 30
ADD (301) 25
MUL (302) 27
DIV (303) 28
LP (304) 12 29 44 45 46 47 50 51 52 53 56 57 58
RP (305) 12 29 44 45 46 47 50 51 52 53 56 57 58


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2 3, on right: 0 2 3
line (54)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 15 16
lines (55)
    on left: 15 16, on right: 16 59
assign_statement (56)
    on left: 17 18 19 20 21, on right: 6 58
math_statement (57)
    on left: 22 23 24 25 26 27 28 29 30, on right: 5 17 25 26 27 28
    29 30 33 34 35 36 37 38 46 48
bool_statement (58)
    on left: 31 32 33 34 35 36 37 38, on right: 7 19 47 49 50 51 52
    53 56 57 58
TypeForParam (59)
    on left: 39 40 41 42 43, on right: 44
function_definition (60)
    on left: 44 45, on right: 3
function_employ (61)
    on left: 46 47, on right: 18 24
return_statement (62)
    on left: 48 49, on right: 11
if_statement (63)
    on left: 50 51 52 53, on right: 9
elsif_list (64)
    on left: 54 55, on right: 52 53 55
elsif (65)
    on left: 56, on right: 54 55
while_statement (66)
    on left: 57, on right: 8
for_statement (67)
    on left: 58, on right: 10
block (68)
    on left: 59 60, on right: 44 45 50 51 52 53 56 57 58


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . line
    3        | program . function_definition

    $end         shift, and go to state 2
    error        shift, and go to state 3
    NUM          shift, and go to state 4
    IDENTIFIER   shift, and go to state 5
    "hello msg"  shift, and go to state 6
    PRINT_T      shift, and go to state 7
    FUNCTION     shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    RETURN_T     shift, and go to state 12
    TRUE_T       shift, and go to state 13
    FALSE_T      shift, and go to state 14
    SUB          shift, and go to state 15
    LP           shift, and go to state 16
    '\n'         shift, and go to state 17

    line                 go to state 18
    assign_statement     go to state 19
    math_statement       go to state 20
    bool_statement       go to state 21
    function_definition  go to state 22
    function_employ      go to state 23
    return_statement     go to state 24
    if_statement         go to state 25
    while_statement      go to state 26
    for_statement        go to state 27


State 2

    0 $accept: program $end .

    $default  accept


State 3

   14 line: error . '\n'

    '\n'  shift, and go to state 28


State 4

   22 math_statement: NUM .

    $default  reduce using rule 22 (math_statement)


State 5

   17 assign_statement: IDENTIFIER . ASSIGN math_statement
   18                 | IDENTIFIER . ASSIGN function_employ
   19                 | IDENTIFIER . ASSIGN bool_statement
   20                 | IDENTIFIER . INCREASE
   21                 | IDENTIFIER . DECREASE
   23 math_statement: IDENTIFIER .
   46 function_employ: IDENTIFIER . LP math_statement RP
   47                | IDENTIFIER . LP bool_statement RP

    INCREASE  shift, and go to state 29
    DECREASE  shift, and go to state 30
    ASSIGN    shift, and go to state 31
    LP        shift, and go to state 32

    $default  reduce using rule 23 (math_statement)


State 6

   13 line: "hello msg" . '\n'

    '\n'  shift, and go to state 33


State 7

   12 line: PRINT_T . LP IDENTIFIER RP SEMICOLON '\n'

    LP  shift, and go to state 34


State 8

   44 function_definition: FUNCTION . IDENTIFIER LP TypeForParam IDENTIFIER RP block
   45                    | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 35


State 9

   50 if_statement: IF . LP bool_statement RP block
   51             | IF . LP bool_statement RP block ELSE block
   52             | IF . LP bool_statement RP block elsif_list
   53             | IF . LP bool_statement RP block elsif_list ELSE block

    LP  shift, and go to state 36


State 10

   57 while_statement: WHILE . LP bool_statement RP block

    LP  shift, and go to state 37


State 11

   58 for_statement: FOR . LP assign_statement SEMICOLON bool_statement SEMICOLON assign_statement RP block

    LP  shift, and go to state 38


State 12

   48 return_statement: RETURN_T . math_statement
   49                 | RETURN_T . bool_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    TRUE_T      shift, and go to state 13
    FALSE_T     shift, and go to state 14
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 40
    bool_statement   go to state 41
    function_employ  go to state 23


State 13

   31 bool_statement: TRUE_T .

    $default  reduce using rule 31 (bool_statement)


State 14

   32 bool_statement: FALSE_T .

    $default  reduce using rule 32 (bool_statement)


State 15

   30 math_statement: SUB . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 42
    function_employ  go to state 23


State 16

   29 math_statement: LP . math_statement RP

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 43
    function_employ  go to state 23


State 17

    4 line: '\n' .

    $default  reduce using rule 4 (line)


State 18

    2 program: program line .

    $default  reduce using rule 2 (program)


State 19

    6 line: assign_statement . SEMICOLON '\n'

    SEMICOLON  shift, and go to state 44


State 20

    5 line: math_statement . '\n'
   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   33 bool_statement: math_statement . GT math_statement
   34               | math_statement . LT math_statement
   35               | math_statement . EQ math_statement
   36               | math_statement . GE math_statement
   37               | math_statement . LE math_statement
   38               | math_statement . NE math_statement

    EQ    shift, and go to state 45
    NE    shift, and go to state 46
    GT    shift, and go to state 47
    GE    shift, and go to state 48
    LT    shift, and go to state 49
    LE    shift, and go to state 50
    SUB   shift, and go to state 51
    ADD   shift, and go to state 52
    MUL   shift, and go to state 53
    DIV   shift, and go to state 54
    '\n'  shift, and go to state 55


State 21

    7 line: bool_statement . '\n'

    '\n'  shift, and go to state 56


State 22

    3 program: program function_definition .

    $default  reduce using rule 3 (program)


State 23

   24 math_statement: function_employ .

    $default  reduce using rule 24 (math_statement)


State 24

   11 line: return_statement . SEMICOLON '\n'

    SEMICOLON  shift, and go to state 57


State 25

    9 line: if_statement . '\n'

    '\n'  shift, and go to state 58


State 26

    8 line: while_statement . '\n'

    '\n'  shift, and go to state 59


State 27

   10 line: for_statement . '\n'

    '\n'  shift, and go to state 60


State 28

   14 line: error '\n' .

    $default  reduce using rule 14 (line)


State 29

   20 assign_statement: IDENTIFIER INCREASE .

    $default  reduce using rule 20 (assign_statement)


State 30

   21 assign_statement: IDENTIFIER DECREASE .

    $default  reduce using rule 21 (assign_statement)


State 31

   17 assign_statement: IDENTIFIER ASSIGN . math_statement
   18                 | IDENTIFIER ASSIGN . function_employ
   19                 | IDENTIFIER ASSIGN . bool_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    TRUE_T      shift, and go to state 13
    FALSE_T     shift, and go to state 14
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 61
    bool_statement   go to state 62
    function_employ  go to state 63


State 32

   46 function_employ: IDENTIFIER LP . math_statement RP
   47                | IDENTIFIER LP . bool_statement RP

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    TRUE_T      shift, and go to state 13
    FALSE_T     shift, and go to state 14
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 64
    bool_statement   go to state 65
    function_employ  go to state 23


State 33

   13 line: "hello msg" '\n' .

    $default  reduce using rule 13 (line)


State 34

   12 line: PRINT_T LP . IDENTIFIER RP SEMICOLON '\n'

    IDENTIFIER  shift, and go to state 66


State 35

   44 function_definition: FUNCTION IDENTIFIER . LP TypeForParam IDENTIFIER RP block
   45                    | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 67


State 36

   50 if_statement: IF LP . bool_statement RP block
   51             | IF LP . bool_statement RP block ELSE block
   52             | IF LP . bool_statement RP block elsif_list
   53             | IF LP . bool_statement RP block elsif_list ELSE block

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    TRUE_T      shift, and go to state 13
    FALSE_T     shift, and go to state 14
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 68
    bool_statement   go to state 69
    function_employ  go to state 23


State 37

   57 while_statement: WHILE LP . bool_statement RP block

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    TRUE_T      shift, and go to state 13
    FALSE_T     shift, and go to state 14
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 68
    bool_statement   go to state 70
    function_employ  go to state 23


State 38

   58 for_statement: FOR LP . assign_statement SEMICOLON bool_statement SEMICOLON assign_statement RP block

    IDENTIFIER  shift, and go to state 71

    assign_statement  go to state 72


State 39

   23 math_statement: IDENTIFIER .
   46 function_employ: IDENTIFIER . LP math_statement RP
   47                | IDENTIFIER . LP bool_statement RP

    LP  shift, and go to state 32

    $default  reduce using rule 23 (math_statement)


State 40

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   33 bool_statement: math_statement . GT math_statement
   34               | math_statement . LT math_statement
   35               | math_statement . EQ math_statement
   36               | math_statement . GE math_statement
   37               | math_statement . LE math_statement
   38               | math_statement . NE math_statement
   48 return_statement: RETURN_T math_statement .

    EQ   shift, and go to state 45
    NE   shift, and go to state 46
    GT   shift, and go to state 47
    GE   shift, and go to state 48
    LT   shift, and go to state 49
    LE   shift, and go to state 50
    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 48 (return_statement)


State 41

   49 return_statement: RETURN_T bool_statement .

    $default  reduce using rule 49 (return_statement)


State 42

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   30               | SUB math_statement .

    $default  reduce using rule 30 (math_statement)


State 43

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   29               | LP math_statement . RP

    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    RP   shift, and go to state 73


State 44

    6 line: assign_statement SEMICOLON . '\n'

    '\n'  shift, and go to state 74


State 45

   35 bool_statement: math_statement EQ . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 75
    function_employ  go to state 23


State 46

   38 bool_statement: math_statement NE . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 76
    function_employ  go to state 23


State 47

   33 bool_statement: math_statement GT . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 77
    function_employ  go to state 23


State 48

   36 bool_statement: math_statement GE . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 78
    function_employ  go to state 23


State 49

   34 bool_statement: math_statement LT . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 79
    function_employ  go to state 23


State 50

   37 bool_statement: math_statement LE . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 80
    function_employ  go to state 23


State 51

   26 math_statement: math_statement SUB . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 81
    function_employ  go to state 23


State 52

   25 math_statement: math_statement ADD . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 82
    function_employ  go to state 23


State 53

   27 math_statement: math_statement MUL . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 83
    function_employ  go to state 23


State 54

   28 math_statement: math_statement DIV . math_statement

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 84
    function_employ  go to state 23


State 55

    5 line: math_statement '\n' .

    $default  reduce using rule 5 (line)


State 56

    7 line: bool_statement '\n' .

    $default  reduce using rule 7 (line)


State 57

   11 line: return_statement SEMICOLON . '\n'

    '\n'  shift, and go to state 85


State 58

    9 line: if_statement '\n' .

    $default  reduce using rule 9 (line)


State 59

    8 line: while_statement '\n' .

    $default  reduce using rule 8 (line)


State 60

   10 line: for_statement '\n' .

    $default  reduce using rule 10 (line)


State 61

   17 assign_statement: IDENTIFIER ASSIGN math_statement .
   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   33 bool_statement: math_statement . GT math_statement
   34               | math_statement . LT math_statement
   35               | math_statement . EQ math_statement
   36               | math_statement . GE math_statement
   37               | math_statement . LE math_statement
   38               | math_statement . NE math_statement

    EQ   shift, and go to state 45
    NE   shift, and go to state 46
    GT   shift, and go to state 47
    GE   shift, and go to state 48
    LT   shift, and go to state 49
    LE   shift, and go to state 50
    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 17 (assign_statement)


State 62

   19 assign_statement: IDENTIFIER ASSIGN bool_statement .

    $default  reduce using rule 19 (assign_statement)


State 63

   18 assign_statement: IDENTIFIER ASSIGN function_employ .
   24 math_statement: function_employ .

    SEMICOLON  reduce using rule 18 (assign_statement)
    SEMICOLON  [reduce using rule 24 (math_statement)]
    RP         reduce using rule 18 (assign_statement)
    RP         [reduce using rule 24 (math_statement)]
    $default   reduce using rule 24 (math_statement)


State 64

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   33 bool_statement: math_statement . GT math_statement
   34               | math_statement . LT math_statement
   35               | math_statement . EQ math_statement
   36               | math_statement . GE math_statement
   37               | math_statement . LE math_statement
   38               | math_statement . NE math_statement
   46 function_employ: IDENTIFIER LP math_statement . RP

    EQ   shift, and go to state 45
    NE   shift, and go to state 46
    GT   shift, and go to state 47
    GE   shift, and go to state 48
    LT   shift, and go to state 49
    LE   shift, and go to state 50
    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    RP   shift, and go to state 86


State 65

   47 function_employ: IDENTIFIER LP bool_statement . RP

    RP  shift, and go to state 87


State 66

   12 line: PRINT_T LP IDENTIFIER . RP SEMICOLON '\n'

    RP  shift, and go to state 88


State 67

   44 function_definition: FUNCTION IDENTIFIER LP . TypeForParam IDENTIFIER RP block
   45                    | FUNCTION IDENTIFIER LP . RP block

    INT_TYPE     shift, and go to state 89
    FLOAT_TYPE   shift, and go to state 90
    DOUBLE_TYPE  shift, and go to state 91
    BOOL_TYPE    shift, and go to state 92
    STRING_TYPE  shift, and go to state 93
    RP           shift, and go to state 94

    TypeForParam  go to state 95


State 68

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   33 bool_statement: math_statement . GT math_statement
   34               | math_statement . LT math_statement
   35               | math_statement . EQ math_statement
   36               | math_statement . GE math_statement
   37               | math_statement . LE math_statement
   38               | math_statement . NE math_statement

    EQ   shift, and go to state 45
    NE   shift, and go to state 46
    GT   shift, and go to state 47
    GE   shift, and go to state 48
    LT   shift, and go to state 49
    LE   shift, and go to state 50
    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54


State 69

   50 if_statement: IF LP bool_statement . RP block
   51             | IF LP bool_statement . RP block ELSE block
   52             | IF LP bool_statement . RP block elsif_list
   53             | IF LP bool_statement . RP block elsif_list ELSE block

    RP  shift, and go to state 96


State 70

   57 while_statement: WHILE LP bool_statement . RP block

    RP  shift, and go to state 97


State 71

   17 assign_statement: IDENTIFIER . ASSIGN math_statement
   18                 | IDENTIFIER . ASSIGN function_employ
   19                 | IDENTIFIER . ASSIGN bool_statement
   20                 | IDENTIFIER . INCREASE
   21                 | IDENTIFIER . DECREASE

    INCREASE  shift, and go to state 29
    DECREASE  shift, and go to state 30
    ASSIGN    shift, and go to state 31


State 72

   58 for_statement: FOR LP assign_statement . SEMICOLON bool_statement SEMICOLON assign_statement RP block

    SEMICOLON  shift, and go to state 98


State 73

   29 math_statement: LP math_statement RP .

    $default  reduce using rule 29 (math_statement)


State 74

    6 line: assign_statement SEMICOLON '\n' .

    $default  reduce using rule 6 (line)


State 75

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   35 bool_statement: math_statement EQ math_statement .

    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 35 (bool_statement)


State 76

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   38 bool_statement: math_statement NE math_statement .

    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 38 (bool_statement)


State 77

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   33 bool_statement: math_statement GT math_statement .

    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 33 (bool_statement)


State 78

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   36 bool_statement: math_statement GE math_statement .

    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 36 (bool_statement)


State 79

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   34 bool_statement: math_statement LT math_statement .

    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 34 (bool_statement)


State 80

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   37 bool_statement: math_statement LE math_statement .

    SUB  shift, and go to state 51
    ADD  shift, and go to state 52
    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 37 (bool_statement)


State 81

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   26               | math_statement SUB math_statement .
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 26 (math_statement)


State 82

   25 math_statement: math_statement . ADD math_statement
   25               | math_statement ADD math_statement .
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 25 (math_statement)


State 83

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   27               | math_statement MUL math_statement .
   28               | math_statement . DIV math_statement

    $default  reduce using rule 27 (math_statement)


State 84

   25 math_statement: math_statement . ADD math_statement
   26               | math_statement . SUB math_statement
   27               | math_statement . MUL math_statement
   28               | math_statement . DIV math_statement
   28               | math_statement DIV math_statement .

    $default  reduce using rule 28 (math_statement)


State 85

   11 line: return_statement SEMICOLON '\n' .

    $default  reduce using rule 11 (line)


State 86

   46 function_employ: IDENTIFIER LP math_statement RP .

    $default  reduce using rule 46 (function_employ)


State 87

   47 function_employ: IDENTIFIER LP bool_statement RP .

    $default  reduce using rule 47 (function_employ)


State 88

   12 line: PRINT_T LP IDENTIFIER RP . SEMICOLON '\n'

    SEMICOLON  shift, and go to state 99


State 89

   39 TypeForParam: INT_TYPE .

    $default  reduce using rule 39 (TypeForParam)


State 90

   40 TypeForParam: FLOAT_TYPE .

    $default  reduce using rule 40 (TypeForParam)


State 91

   41 TypeForParam: DOUBLE_TYPE .

    $default  reduce using rule 41 (TypeForParam)


State 92

   42 TypeForParam: BOOL_TYPE .

    $default  reduce using rule 42 (TypeForParam)


State 93

   43 TypeForParam: STRING_TYPE .

    $default  reduce using rule 43 (TypeForParam)


State 94

   45 function_definition: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 100

    block  go to state 101


State 95

   44 function_definition: FUNCTION IDENTIFIER LP TypeForParam . IDENTIFIER RP block

    IDENTIFIER  shift, and go to state 102


State 96

   50 if_statement: IF LP bool_statement RP . block
   51             | IF LP bool_statement RP . block ELSE block
   52             | IF LP bool_statement RP . block elsif_list
   53             | IF LP bool_statement RP . block elsif_list ELSE block

    LC  shift, and go to state 100

    block  go to state 103


State 97

   57 while_statement: WHILE LP bool_statement RP . block

    LC  shift, and go to state 100

    block  go to state 104


State 98

   58 for_statement: FOR LP assign_statement SEMICOLON . bool_statement SEMICOLON assign_statement RP block

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    TRUE_T      shift, and go to state 13
    FALSE_T     shift, and go to state 14
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 68
    bool_statement   go to state 105
    function_employ  go to state 23


State 99

   12 line: PRINT_T LP IDENTIFIER RP SEMICOLON . '\n'

    '\n'  shift, and go to state 106


State 100

   59 block: LC . lines RC
   60      | LC . RC

    error        shift, and go to state 3
    NUM          shift, and go to state 4
    IDENTIFIER   shift, and go to state 5
    "hello msg"  shift, and go to state 6
    PRINT_T      shift, and go to state 7
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    RETURN_T     shift, and go to state 12
    RC           shift, and go to state 107
    TRUE_T       shift, and go to state 13
    FALSE_T      shift, and go to state 14
    SUB          shift, and go to state 15
    LP           shift, and go to state 16
    '\n'         shift, and go to state 17

    line              go to state 108
    lines             go to state 109
    assign_statement  go to state 19
    math_statement    go to state 20
    bool_statement    go to state 21
    function_employ   go to state 23
    return_statement  go to state 24
    if_statement      go to state 25
    while_statement   go to state 26
    for_statement     go to state 27


State 101

   45 function_definition: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 45 (function_definition)


State 102

   44 function_definition: FUNCTION IDENTIFIER LP TypeForParam IDENTIFIER . RP block

    RP  shift, and go to state 110


State 103

   50 if_statement: IF LP bool_statement RP block .
   51             | IF LP bool_statement RP block . ELSE block
   52             | IF LP bool_statement RP block . elsif_list
   53             | IF LP bool_statement RP block . elsif_list ELSE block

    ELSE   shift, and go to state 111
    ELSIF  shift, and go to state 112

    $default  reduce using rule 50 (if_statement)

    elsif_list  go to state 113
    elsif       go to state 114


State 104

   57 while_statement: WHILE LP bool_statement RP block .

    $default  reduce using rule 57 (while_statement)


State 105

   58 for_statement: FOR LP assign_statement SEMICOLON bool_statement . SEMICOLON assign_statement RP block

    SEMICOLON  shift, and go to state 115


State 106

   12 line: PRINT_T LP IDENTIFIER RP SEMICOLON '\n' .

    $default  reduce using rule 12 (line)


State 107

   60 block: LC RC .

    $default  reduce using rule 60 (block)


State 108

   15 lines: line .

    $default  reduce using rule 15 (lines)


State 109

   16 lines: lines . line
   59 block: LC lines . RC

    error        shift, and go to state 3
    NUM          shift, and go to state 4
    IDENTIFIER   shift, and go to state 5
    "hello msg"  shift, and go to state 6
    PRINT_T      shift, and go to state 7
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    RETURN_T     shift, and go to state 12
    RC           shift, and go to state 116
    TRUE_T       shift, and go to state 13
    FALSE_T      shift, and go to state 14
    SUB          shift, and go to state 15
    LP           shift, and go to state 16
    '\n'         shift, and go to state 17

    line              go to state 117
    assign_statement  go to state 19
    math_statement    go to state 20
    bool_statement    go to state 21
    function_employ   go to state 23
    return_statement  go to state 24
    if_statement      go to state 25
    while_statement   go to state 26
    for_statement     go to state 27


State 110

   44 function_definition: FUNCTION IDENTIFIER LP TypeForParam IDENTIFIER RP . block

    LC  shift, and go to state 100

    block  go to state 118


State 111

   51 if_statement: IF LP bool_statement RP block ELSE . block

    LC  shift, and go to state 100

    block  go to state 119


State 112

   56 elsif: ELSIF . LP bool_statement RP block

    LP  shift, and go to state 120


State 113

   52 if_statement: IF LP bool_statement RP block elsif_list .
   53             | IF LP bool_statement RP block elsif_list . ELSE block
   55 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 121
    ELSIF  shift, and go to state 112

    $default  reduce using rule 52 (if_statement)

    elsif  go to state 122


State 114

   54 elsif_list: elsif .

    $default  reduce using rule 54 (elsif_list)


State 115

   58 for_statement: FOR LP assign_statement SEMICOLON bool_statement SEMICOLON . assign_statement RP block

    IDENTIFIER  shift, and go to state 71

    assign_statement  go to state 123


State 116

   59 block: LC lines RC .

    $default  reduce using rule 59 (block)


State 117

   16 lines: lines line .

    $default  reduce using rule 16 (lines)


State 118

   44 function_definition: FUNCTION IDENTIFIER LP TypeForParam IDENTIFIER RP block .

    $default  reduce using rule 44 (function_definition)


State 119

   51 if_statement: IF LP bool_statement RP block ELSE block .

    $default  reduce using rule 51 (if_statement)


State 120

   56 elsif: ELSIF LP . bool_statement RP block

    NUM         shift, and go to state 4
    IDENTIFIER  shift, and go to state 39
    TRUE_T      shift, and go to state 13
    FALSE_T     shift, and go to state 14
    SUB         shift, and go to state 15
    LP          shift, and go to state 16

    math_statement   go to state 68
    bool_statement   go to state 124
    function_employ  go to state 23


State 121

   53 if_statement: IF LP bool_statement RP block elsif_list ELSE . block

    LC  shift, and go to state 100

    block  go to state 125


State 122

   55 elsif_list: elsif_list elsif .

    $default  reduce using rule 55 (elsif_list)


State 123

   58 for_statement: FOR LP assign_statement SEMICOLON bool_statement SEMICOLON assign_statement . RP block

    RP  shift, and go to state 126


State 124

   56 elsif: ELSIF LP bool_statement . RP block

    RP  shift, and go to state 127


State 125

   53 if_statement: IF LP bool_statement RP block elsif_list ELSE block .

    $default  reduce using rule 53 (if_statement)


State 126

   58 for_statement: FOR LP assign_statement SEMICOLON bool_statement SEMICOLON assign_statement RP . block

    LC  shift, and go to state 100

    block  go to state 128


State 127

   56 elsif: ELSIF LP bool_statement RP . block

    LC  shift, and go to state 100

    block  go to state 129


State 128

   58 for_statement: FOR LP assign_statement SEMICOLON bool_statement SEMICOLON assign_statement RP block .

    $default  reduce using rule 58 (for_statement)


State 129

   56 elsif: ELSIF LP bool_statement RP block .

    $default  reduce using rule 56 (elsif)
